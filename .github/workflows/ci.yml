name: ci-lite

on:
  pull_request:
    branches: [ main ]
  push:
    branches: [ main ]

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  smoke:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install liblsl
        run: |
          set -euo pipefail
          LIBLSL_VERSION=1.16.2
          DEB="liblsl-${LIBLSL_VERSION}-jammy_amd64.deb"
          URL="https://github.com/sccn/liblsl/releases/download/v${LIBLSL_VERSION}/${DEB}"
          curl -fsSL -o "${DEB}" "${URL}"
          # TODO: Replace the placeholder checksum below with the official sha256 once verified locally.
          # echo "<sha256sum_here>  ${DEB}" | sha256sum -c -
          sudo dpkg -i "${DEB}" || sudo apt-get -f install -y
          python -c "import sys, pylsl; print('pylsl lib path:', pylsl.lib.__file__)"

      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install uv
        run: python -m pip install --upgrade pip uv

      - name: Cache uv virtualenv
        uses: actions/cache@v4
        with:
          path: |
            .venv
            ~/.cache/uv
          key: uv-${{ runner.os }}-${{ hashFiles('uv.lock') }}
          restore-keys: |
            uv-${{ runner.os }}-

      - name: Sync deps (if pyproject exists)
        run: |
          if [ -f pyproject.toml ]; then
            uv sync
          else
            echo "No pyproject.toml; skipping sync"
          fi

      - name: Import check
        run: uv run python -c "import lsl_harness; print('import ok')"

      - name: CLI help (module entry)
        run: uv run python -m lsl_harness.cli --help

      - name: Run tests
        run: uv run pytest

      - name: Capture synthetic stream measurement
        run: |
          set -euo pipefail

          RESULTS_DIR="results/ci_synthetic_run"
          MEASUREMENT_DURATION_SECONDS=5
          OUTLET_STARTUP_TIMEOUT=15
          rm -rf "${RESULTS_DIR}"
          mkdir -p "${RESULTS_DIR}"

          uv run synthetic-outlet >"${RESULTS_DIR}/outlet.log" 2>&1 &
          OUTLET_PID=$!

          cleanup() {
            if kill -0 "${OUTLET_PID}" 2>/dev/null; then
              kill "${OUTLET_PID}" || true
              wait "${OUTLET_PID}" || true
            fi
          }
          trap cleanup EXIT

          started=0
          for _ in $(seq 1 "${OUTLET_STARTUP_TIMEOUT}"); do
            if grep -q "Now streaming data" "${RESULTS_DIR}/outlet.log" 2>/dev/null; then
              started=1
              break
            fi
            sleep 1
          done
          if [ "${started}" -ne 1 ]; then
            echo "Outlet failed to start within ${OUTLET_STARTUP_TIMEOUT}s" >&2
            exit 1
          fi

          uv run lsl-harness measure \
            --duration-seconds "${MEASUREMENT_DURATION_SECONDS}" \
            --output-directory "${RESULTS_DIR}" \
            --no-summary

          uv run lsl-harness report "${RESULTS_DIR}"

      - name: Upload synthetic artifacts
        uses: actions/upload-artifact@v4
        with:
          name: synthetic-measurement
          path: results/ci_synthetic_run
